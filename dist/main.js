/*! @keithclark/diskview v1.0.0 - Keith Clark (https://keithclark.co.uk) - MIT license */
class t{#t;#e;#r;#s;#i;#n;#a;constructor(t,e={},r=0){const{tracks:s=80,sides:i=2,sectorsPerTrack:n=9,bytesPerSector:a=512}=e;if(!(t instanceof ArrayBuffer))throw new TypeError(`Expected ArrayBuffer. Got ${t.constructor.name}.`);this.#a=r,this.#t=t,this.#e=s,this.#r=i,this.#s=n,this.#i=a,this.#n=n*a}#o(t,e,r){if(t<1||t>this.#s)throw new RangeError(`Sector out of bounds. Expected 1-${this.#s}. Got ${t}.`);if(e<0||e>this.#e-1)throw new RangeError(`Track out of bounds. Expected 0-${this.#e-1}. Got ${this.#e}.`);if(r<0||e>this.#r-1)throw new RangeError(`Side out of bounds. Expected 0-${this.#r-1}. Got ${this.#r}.`);let s=e*this.#r*this.#n;return s+=r*this.#n,s+=(t-1)*this.#i,s+=this.#a,s}getTrack(t,e=0){const r=this.#o(1,t,e),s=r+this.#n;return Uint8Array(this.#t.slice(r,s))}getSector(t,e,r){const s=this.#o(t,e,r),i=s+this.#i;return new Uint8Array(this.#t.slice(s,i))}setSector(t,e,r,s){if(s.length!==this.#i)throw new RangeError(`Buffer length invalid. Expected ${this.#i} bytes, got ${s.length}.`);const i=this.#o(t,e,r);new Uint8Array(this.#t).set(s,i)}get buffer(){return this.#t}get byteOffset(){return this.#a}get bytesPerSector(){return this.#i}get tracks(){return this.#e}get sides(){return this.#r}}const e="WriteError";class r extends Error{#h;constructor(t,e){super(t),this.#h=e}get name(){return this.#h}}const s=32,i="fat12",n=/^[A-Z0-9$%'\-_@~`!()^#&]{1,8}(\.[A-Z0-9$%'\-_@~`!()^#&]{1,3})?$/,a=t=>{t.startsWith("/")||(t="/"+t);const e=t.split("/").slice(1).filter(t=>!!t),r=e.at(-1)??"",[s,i=""]=r.split(".");return{segments:e,dir:`/${e.slice(0,-1).join("/")}`,base:r,name:s,ext:i}},o=t=>n.test(t);class h{#c;constructor(t,e=0){if(!(t instanceof ArrayBuffer))throw"Expected ArrayBuffer";this.#c=new DataView(t,e,this.byteLength)}#u(t){if(!o(t))throw new r(`Invalid filename "${t}"`)}getName(){const t=new TextDecoder,{buffer:e,byteOffset:r}=this.#c,s=t.decode(new Uint8Array(e,r,11)),i=s.slice(0,8).trim(),n=s.slice(8).trim();return n?`${i}.${n}`:i}setName(t){this.#u(t);const{buffer:e,byteOffset:r}=this.#c,{name:s,ext:i}=a(t),n=s.padEnd(8," ")+i.padEnd(3," ");new Uint8Array(e,r,11).set((new TextEncoder).encode(n.toUpperCase()))}getStartCluster(){return this.#c.getUint16(26,!0)}setStartCluster(t){this.#c.setUint16(26,t,!0)}getAttributes(){return this.#c.getUint8(11)}setAttributes(t){return this.#c.setUint8(11,t)}getSize(){return this.#c.getUint32(28,!0)}setSize(t){this.#c.setUint32(28,t,!0)}get buffer(){return this.#c.buffer}get byteOffset(){return this.#c.byteOffset}get byteLength(){return s}}class c{#c;constructor(t,e=0,r=t.byteLength){this.#c=new Uint8Array(t,e,r)}getCluster(t){const e=Math.floor(1.5*t),r=1&t,s=this.#c[e],i=this.#c[e+1];return r?4095&(i<<4|s>>4):(15&i)<<8|s}setCluster(t,e){const r=Math.floor(1.5*t);if(e&=4095,1&t){const t=this.#c[r];this.#c[r]=15&t|(15&e)<<4,this.#c[r+1]=e>>4&255}else{this.#c[r]=255&e;const t=this.#c[r+1];this.#c[r+1]=240&t|e>>8&15}}getClusterChain(t){const e=[];for(;t<4088;)e.push(t),t=this.getCluster(t);return e}get buffer(){return this.#c.buffer}get byteOffset(){return this.#c.byteOffset}get byteLength(){return this.#c.byteLength}}class u{#c;constructor(t,e=0,r=t.byteLength){this.#c=new Uint8Array(t,e,r)}getCluster(t){const e=2*t,r=this.#c[e];return this.#c[e+1]<<8|r}setCluster(t,e){const r=2*t;this.#c[r]=255&e,this.#c[r+1]=e>>8&255}getClusterChain(t){const e=[];for(;t<4088;)e.push(t),t=this.getCluster(t);return e}get buffer(){return this.#c.buffer}get byteOffset(){return this.#c.byteOffset}get byteLength(){return this.#c.byteLength}}class l extends t{#l;#f;#y;#g;#b;#w;#S;#d;#C;#v;#E;constructor(t,e={},r=0){const{format:n=i}=e,a=new DataView(t,r),o=a.getUint16(11,!0),h=a.getUint8(13),l=a.getUint16(19,!0),f=a.getUint16(24,!0),y=a.getUint16(26,!0);if(super(t,{tracks:l/f/y,sides:y,sectorsPerTrack:f,bytesPerSector:o},r),n===i)this.#E=c;else{if("fat16"!==n)throw new TypeError(`Unknown FAT filesystem type ${n}`);this.#E=u}this.#v=a.getUint16(17,!0),this.#C=a.getUint16(14,!0)||1,this.#d=a.getUint8(16),this.#S=a.getUint16(22,!0),this.#g=h*o,this.#l=this.#C*this.bytesPerSector+r,this.#f=this.#l+this.#d*this.#S*this.bytesPerSector,this.#y=this.#v*s,this.#b=this.#f+this.#y;const g=this.#d*this.#S,b=l-this.#C-g-this.#y/o;this.#w=b/h}#m(t){const{dir:e,base:r}=a(t);return{name:r,directory:this.getDirectoryAtPath(e)}}*#D(){yield*this.#A(this.#f,this.#y)}*#A(t,e){const r=new Uint8Array(this.buffer,t,e);let i=0;for(;i<e&&0!==r[i];)yield new h(this.buffer,t+i),i+=s}*#P(t){const e=this.#z().getClusterChain(t.getStartCluster());for(let t of e){const e=this.#b+(t-2)*this.#g;yield*this.#A(e,this.#g)}}#T(t){return t?this.#P(t):this.#D()}#F(t,e){for(const r of t)if(r.getName()===e)return r;return null}#u(t){if(!o(t))throw new r(`Invalid filename "${t}"`)}#U(t,s){if(this.#F(t,s))throw new r(`"${s}" aleady exists`,e)}getFree(){const t=this.#z();let e=0;for(let r=2;r<this.#w;r++)0===t.getCluster(r)&&(e+=this.#g);return e}getSize(){return this.#w*this.#g}#k(t,e=null){this.#u(t);const s=this.#T(e),i=this.#F(s,t);if(!i)throw new r(`Entry "${t}" not found"`,"NotFoundError");return i}#p(t,e=0,r=null){const i=this.getDirectoryEntries(r);this.#u(t),this.#U(i,t);const n=this.#x(),a=i.at(-1).byteOffset+s,o=new h(this.buffer,a);return o.setName(t),o.setSize(0),o.setAttributes(e),o.setStartCluster(n),this.#$(n,4095),o}getFile(t,e=null){const s=this.#k(t,e);if(16&s.getAttributes())throw new r(`${t} is not a file`);return s}createFile(t,e=null){return this.#p(t,0,e)}getFileContents(t){const e=this.#z().getClusterChain(t.getStartCluster()),r=new Uint8Array(this.#g*e.length);return e.forEach((t,e)=>{const s=this.#O(t);r.set(new Uint8Array(s),this.#g*e)}),r.slice(0,t.getSize())}setFileContents(t,e){"string"==typeof e&&(e=(new TextEncoder).encode(e));const r=this.#z(),s=Math.ceil(e.byteLength/this.#g),i=r.getClusterChain(t.getStartCluster()),n=i.slice(s),a=i.slice(0,s),o=[];try{for(;a.length<s;){const t=this.#x();o.push(t),a.push(t)}}catch(t){for(const t of o)this.#N(t);throw t}a.forEach((t,r)=>{const s=r*this.#g,i=e.slice(s,s+this.#g);this.#I(t,i);const n=a[r+1];n?this.#$(t,n):this.#$(t,4095)}),t.setSize(e.byteLength),n.forEach(t=>{this.#N(t)})}getDirectory(t,e=null){const s=this.#k(t,e);if(!(16&s.getAttributes()))throw new r(`${t} is not a directory`);return s}getDirectoryEntries(t=null){return[...this.#T(t)]}createDirectory(t,e=null){const r=this.#p(t,16,e),i=new Uint8Array(64),n=r.getStartCluster(),a=e?.getStartCluster()??0,o=new h(i.buffer);o.setName("A"),o.setSize(0),o.setAttributes(16),o.setStartCluster(n);const c=new h(i.buffer,s);return c.setName("A"),c.setSize(0),c.setAttributes(16),c.setStartCluster(a),i[0]=46,i[32]=46,i[33]=46,this.#I(n,i),r}getFileAtPath(t){const{name:e,directory:r}=this.#m(t);return this.getFile(e,r)}createFileAtPath(t){const{name:e,directory:r}=this.#m(t);return this.createFile(e,r)}getDirectoryAtPath(t){const{segments:e}=a(t);let r=null;for(;e.length;){const t=e.shift();r=this.getDirectory(t,r)}return r}createDirectoryAtPath(t){const{name:e,directory:r}=this.#m(t);return this.createDirectory(e,r)}#O(t){const e=this.#b+(t-2)*this.#g;return this.buffer.slice(e,e+this.#g)}#I(t,e){const r=this.#b+(t-2)*this.#g;return new Uint8Array(this.buffer).set(e,r)}#x(t=0){const s=this.#z(t);for(let t=2;t<this.#w;t++)if(0===s.getCluster(t))return this.#$(t,1),t;throw new r("Disk full",e)}#N(t){this.#$(t,0)}#z(t=0){if(t<0||t>this.#d-1)throw new Error("Invalid FAT number.");const e=this.#S*this.bytesPerSector;return new this.#E(this.buffer,this.#l+t*e,e)}#$(t,e){for(let r=0;r<this.#d;r++){this.#z(r).setCluster(t,e)}}}export{t as DiskView,h as FatDirectoryEntryView,l as FatDiskView,r as FatError};
